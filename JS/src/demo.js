/*使用var重新声明一个已经存在的变量，是无效的*/
var x = 1;
var x;
console.log(x);

/*在控制台（console）显示变量a的值。这时变量a还没有声明和赋值，所以这是一种错误的做法，但是实际上不会报错。因为存在变量提升*/
/*JavaScript引擎的工作方式是，先解析代码，获取所有被声明的变量，然后再一行一行地运行，这造成的结果就是所有的变量的声明语句，
 都会被提升到代码的头部，这就叫做变量提升（hoisting）*/
console.log(a);
var a = 10;
/*真正运行的代码如下：
 var a;
 console.log(a);
 a = 4;*/

/*变量提升只对var命令声明的变量有效，如果一个变量不是用var命令声明的，就不会发生变量提升变量提升只对var命令声明的变量有效，
 如果一个变量不是用var命令声明的，就不会发生变量提升
 console.log(b);
 b = 4;
 */

/*中文是合法的标识符，可以用作变量名*/
var 临时变量 = 32;
console.log(临时变量);

/*在if条件中的表达式，有些开发者习惯将常量写在运算符的左边，防止出现错误（类似下面报错的情况）
 if(x=2){}//不报错
 if(2=x){}//报错
 */

/*switch语句后面的表达式和case后面的表达式比较时，采用的是严格相等运算符（===），而不是相等运算符（==），
这意味着比较时不会发生强制类型转换
var num = 4;

switch(num){
    case true:
        console.log("num发生类型强制转换");
    default:
        console.log("num没有发生类型强制转换");
}*/